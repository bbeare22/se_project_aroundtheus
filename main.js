!function(){"use strict";const e=".cards__list",t="#card-template",i={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};class r{constructor(e,t,i,r,s,n){let{name:o,link:a,_id:l,isLiked:d=!1}=e;this._name=o,this._link=a,this._id=l,this._isLiked=d,this._cardSelector=t,this._handleImageClick=i,this._handleDeleteClick=r,this._handleLikeClick=s,this._currentUserId=n,this._element=this._getTemplate(),this._image=this._element.querySelector(".card__image"),this._title=this._element.querySelector(".card__title"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._likeButton=this._element.querySelector(".card__like-button")}getId(){return this._id}getView(){return this._image.src=this._link,this._image.alt=this._name,this._title.textContent=this._name,this._updateLikesView(),this._setEventListeners(),this._element}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>this._handleLikeClick(this))),this._deleteButton.addEventListener("click",(()=>this._handleDeleteClick(this,this._id))),this._image.addEventListener("click",(()=>this._handleImageClick({name:this._name,link:this._link})))}isLiked(){return this._isLiked}updateLikes(e){let{isLiked:t}=e;this._isLiked=t,this._updateLikesView()}_updateLikesView(){this._isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}removeCard(){this._element.remove(),this._element=null}}class s{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputEls=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableSubmitButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return this._inputEls.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableSubmitButton():this._enableSubmitButton()}_setEventListeners(){this._toggleButtonState(),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}enableValidation(){this._form.addEventListener("submit",(e=>e.preventDefault())),this._setEventListeners()}}class n{constructor(e,t){let{items:i=[],renderer:r}=e;this._items=i,this._renderer=r,this._container=document.querySelector(t)}renderItems(){(arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._items).forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}}class o{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{const t=e.target===this._popupElement,i=e.target.classList.contains("modal__close");(t||i)&&this.close()}))}}class a extends o{constructor(e,t){super({popupSelector:e}),this._form=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputs=Array.from(this._form.querySelectorAll(".modal__input")),this._submitButton=this._form.querySelector(".modal__button"),this._defaultButtonText=this._submitButton.textContent}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputs.forEach((t=>{const i=e[t.name];t.value="string"==typeof i?i.trim():""}))}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this.renderLoading(!0),this._handleFormSubmit(t).then((()=>{this._form.reset(),this.close()})).catch((e=>{console.error("Form submission failed:",e)})).finally((()=>{this.renderLoading(!1)}))}))}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._defaultButtonText}}class l extends o{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector("#image-modal-image"),this._caption=this._popupElement.querySelector("#modal-caption")}open(e){let{name:t,link:i}=e;this._image.src=i,this._image.alt=t?`Photo of ${t}`:"Photo preview",this._caption.textContent=t||"",super.open()}}class d extends o{constructor(e){let{popupSelector:t,submitButtonSelector:i=".modal__button"}=e;super({popupSelector:t}),this._form=this._popupElement.querySelector("form"),this._submitButton=this._form.querySelector(i),this._originalButtonText=this._submitButton.textContent,this._handleSubmit=null}setSubmitAction(e){this._handleSubmit=e}renderSaving(e){this._submitButton.textContent=e?"Deleting...":this._originalButtonText}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{if(e.preventDefault(),this._handleSubmit){const e=this._handleSubmit();e&&"function"==typeof e.then&&e.catch((e=>{console.error("PopupWithConfirm submit error:",e)}))}}))}}class u{constructor(e){let{nameSelector:t,jobSelector:i,avatarSelector:r}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(i),this._avatarElement=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,about:this._jobElement.textContent}}setUserInfo(e){let{name:t,about:i,avatar:r}=e;t&&(this._nameElement.textContent=t),i&&(this._jobElement.textContent=i),r&&this.setAvatar(r)}setAvatar(e){this._avatarElement&&(this._avatarElement.src=e)}}let c,h,_,m,p,v;const S=new class{constructor(e){let{baseUrl:t,headers:i}=e;this._baseUrl=t,this._headers=i}_handleResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return fetch(`${this._baseUrl}${e}`,{...t,headers:this._headers}).then(this._handleResponse)}getUserInfo(){return this._request("/users/me")}updateUserInfo(e){let{name:t,about:i}=e;return this._request("/users/me",{method:"PATCH",body:JSON.stringify({name:t,about:i})})}updateAvatar(e){return this._request("/users/me/avatar",{method:"PATCH",body:JSON.stringify({avatar:e})})}getInitialCards(){return this._request("/cards")}addCard(e){let{name:t,link:i}=e;return this._request("/cards",{method:"POST",body:JSON.stringify({name:t,link:i})})}deleteCard(e){return this._request(`/cards/${e}`,{method:"DELETE"})}likeCard(e){return this._request(`/cards/${e}/likes`,{method:"PUT"}).then((e=>{if(!e||"boolean"!=typeof e.isLiked)throw new Error("Invalid like response");return e}))}unlikeCard(e){return this._request(`/cards/${e}/likes`,{method:"DELETE"}).then((e=>{if(!e||"boolean"!=typeof e.isLiked)throw new Error("Invalid unlike response");return e}))}getAppData(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"806a2baa-081d-4321-b473-e51300bcf632","Content-Type":"application/json"}});document.addEventListener("DOMContentLoaded",(()=>{m=function(){const i=document.querySelector(".profile"),r=document.querySelector("#add-card-modal"),s=document.querySelector("#popup-preview-modal"),n=document.querySelector("#avatar-edit-modal");return{profile:i,profileEditButton:i.querySelector("#profile-edit-button"),profileTitle:i.querySelector("#profile-title"),profileDescription:i.querySelector("#profile-description"),cardAddButton:i.querySelector("#card-add-button"),cardListEl:document.querySelector(e),cardTemplate:document.querySelector(t),profileEdit:document.querySelector("#profile-edit-modal"),profileEditForm:document.querySelector("#edit-profile-form"),profileTitleInput:document.querySelector("#profile-title-input"),profileDescriptionInput:document.querySelector("#profile-description-input"),cardAdd:r,cardAddForm:document.querySelector("#add-card-form"),cardTitleInput:r.querySelector(".modal__input_type_title"),cardImageInput:r.querySelector("#card-description-input"),cardURLInput:r.querySelector(".modal__input_type_url"),imageModal:s,imageModalImage:s.querySelector("#image-modal-image"),imageModalCaption:s.querySelector("#modal-caption"),avatarEditForm:n.querySelector(".modal__form"),avatarEditButton:document.querySelector(".profile__avatar-edit-button"),confirmDeleteModal:document.querySelector("#confirm-delete-modal")}}();const o=new u({nameSelector:"#profile-title",jobSelector:"#profile-description",avatarSelector:".profile__image"});c=new s(i,m.profileEditForm),c.enableValidation(),h=new s(i,m.cardAddForm),h.enableValidation(),_=new s(i,m.avatarEditForm),_.enableValidation();const E=new d({popupSelector:"#confirm-delete-modal"});E.setEventListeners(),p=new n({items:[],renderer:L},e);const f=new a("#add-card-modal",(e=>S.addCard({name:e.title,link:e.url}).then((e=>{L(e),h.disableSubmitButton()}))));f.setEventListeners();const b=new a("#profile-edit-modal",(e=>S.updateUserInfo({name:e.name,about:e.about}).then((e=>{o.setUserInfo(e)}))));b.setEventListeners();const y=new a("#avatar-edit-modal",(e=>S.updateAvatar(e.avatar).then((e=>{o.setAvatar(e.avatar)}))));y.setEventListeners();const g=new l("#popup-preview-modal");function L(e){const i=new r(e,t,k,((e,t)=>{E.setSubmitAction((()=>{E.renderSaving(!0),S.deleteCard(t).then((()=>{e.removeCard(),E.close()})).finally((()=>{E.renderSaving(!1)}))})),E.open()}),(e=>{const t=e.getId();(e.isLiked()?S.unlikeCard(t):S.likeCard(t)).then((t=>{if("boolean"!=typeof t.isLiked)throw new Error("Invalid like response");e.updateLikes(t)})).catch((e=>{console.error("Failed to toggle like:",e)}))}),v);p.addItem(i.getView())}function k(e){g.open(e)}g.setEventListeners(),S.getAppData().then((e=>{let[t,i]=e;v=t._id,o.setUserInfo(t),p.renderItems(i)})),m.profileEditButton.addEventListener("click",(()=>{c.resetValidation(),b.setInputValues(o.getUserInfo()),b.open()})),m.cardAddButton.addEventListener("click",(()=>{h.resetValidation(),f.open()})),m.avatarEditButton.addEventListener("click",(()=>{_.resetValidation(),y.open()}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
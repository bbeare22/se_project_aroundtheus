!function(){"use strict";const t=".cards__list",e="#card-template",r={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};class i{constructor(t,e,r,i){let{name:s,link:n,_id:o}=t;this._name=s,this._link=n,this._id=o,this._cardSelector=e,this._handleImageClick=r,this._handleDeleteClick=i,this._element=this._getTemplate(),this._image=this._element.querySelector(".card__image"),this._title=this._element.querySelector(".card__title"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._likeButton=this._element.querySelector(".card__like-button")}getView(){return this._image.src=this._link,this._image.alt=this._name,this._title.textContent=this._name,this._setEventListeners(),this._element}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>this._toggleLike())),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this,this._id)})),this._image.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_toggleLike(){this._likeButton.classList.toggle("card__like-button_active")}removeCard(){this._element.remove(),this._element=null}}class s{constructor(t,e){this._form=e,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inputEls=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_hideInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableSubmitButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return this._inputEls.some((t=>!t.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableSubmitButton():this._enableSubmitButton()}_setEventListeners(){this._toggleButtonState(),this._inputEls.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}resetValidation(){this._inputEls.forEach((t=>{this._hideInputError(t)})),this._toggleButtonState()}enableValidation(){this._form.addEventListener("submit",(t=>t.preventDefault())),this._setEventListeners()}}class n{constructor(t,e){let{items:r=[],renderer:i}=t;this._items=r,this._renderer=i,this._container=document.querySelector(e)}renderItems(){(arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._items).forEach((t=>this._renderer(t)))}addItem(t){this._container.prepend(t)}}class o{constructor(t){let{popupSelector:e}=t;this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(t){"Escape"===t.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(t=>{const e=t.target===this._popupElement,r=t.target.classList.contains("modal__close");(e||r)&&this.close()}))}}class a extends o{constructor(t,e){super({popupSelector:t}),this._form=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=e,this._inputs=Array.from(this._form.querySelectorAll(".modal__input")),this._submitButton=this._form.querySelector(".modal__button"),this._defaultButtonText=this._submitButton.textContent}_getInputValues(){const t={};return this._inputs.forEach((e=>{t[e.name]=e.value})),t}setInputValues(t){this._inputs.forEach((e=>{const r=t[e.name];e.value="string"==typeof r?r.trim():""}))}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(t=>{t.preventDefault();const e=this._getInputValues();this.renderLoading(!0),this._handleFormSubmit(e).then((()=>{this._form.reset(),this.close()})).catch((t=>{console.error("Form submission failed:",t)})).finally((()=>{this.renderLoading(!1)}))}))}renderLoading(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=t?e:this._defaultButtonText}}class l extends o{constructor(t){super({popupSelector:t}),this._image=this._popupElement.querySelector("#image-modal-image"),this._caption=this._popupElement.querySelector("#modal-caption")}open(t){let{name:e,link:r}=t;this._image.src=r,this._image.alt=e?`Photo of ${e}`:"Photo preview",this._caption.textContent=e||"",super.open()}}class d extends o{constructor(t){let{popupSelector:e,submitButtonSelector:r=".modal__button"}=t;super({popupSelector:e}),this._form=this._popupElement.querySelector("form"),this._submitButton=this._form.querySelector(r),this._originalButtonText=this._submitButton.textContent,this._handleSubmit=null}setSubmitAction(t){this._handleSubmit=t}renderSaving(t){this._submitButton.textContent=t?"Deleting...":this._originalButtonText}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(t=>{t.preventDefault(),this._handleSubmit&&this._handleSubmit()}))}}class u{constructor(t){let{nameSelector:e,jobSelector:r,avatarSelector:i}=t;this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(r),this._avatarElement=document.querySelector(i)}getUserInfo(){return{name:this._nameElement.textContent,about:this._jobElement.textContent}}setUserInfo(t){let{name:e,about:r,avatar:i}=t;e&&(this._nameElement.textContent=e),r&&(this._jobElement.textContent=r),i&&this.setAvatar(i)}setAvatar(t){this._avatarElement&&(this._avatarElement.src=t)}}let c,h,m,_,p,S;const E=new class{constructor(t){let{baseUrl:e,headers:r}=t;this._baseUrl=e,this._headers=r}_handleResponse(t){return t.ok?t.json():Promise.reject(`Error: ${t.status}`)}_request(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return fetch(`${this._baseUrl}${t}`,{...e,headers:this._headers}).then(this._handleResponse)}getUserInfo(){return this._request("/users/me")}updateUserInfo(t){let{name:e,about:r}=t;return this._request("/users/me",{method:"PATCH",body:JSON.stringify({name:e,about:r})})}updateAvatar(t){return this._request("/users/me/avatar",{method:"PATCH",body:JSON.stringify({avatar:t})})}getInitialCards(){return this._request("/cards")}addCard(t){let{name:e,link:r}=t;return this._request("/cards",{method:"POST",body:JSON.stringify({name:e,link:r})})}deleteCard(t){return this._request(`/cards/${t}`,{method:"DELETE"})}likeCard(t){return this._request(`/cards/${t}/likes`,{method:"PUT"})}dislikeCard(t){return this._request(`/cards/${t}/likes`,{method:"DELETE"})}getAppData(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"806a2baa-081d-4321-b473-e51300bcf632","Content-Type":"application/json"}});document.addEventListener("DOMContentLoaded",(()=>{_=function(){const r=document.querySelector(".profile"),i=document.querySelector("#add-card-modal"),s=document.querySelector("#popup-preview-modal"),n=document.querySelector("#avatar-edit-modal");return{profile:r,profileEditButton:r.querySelector("#profile-edit-button"),profileTitle:r.querySelector("#profile-title"),profileDescription:r.querySelector("#profile-description"),cardAddButton:r.querySelector("#card-add-button"),cardListEl:document.querySelector(t),cardTemplate:document.querySelector(e),profileEdit:document.querySelector("#profile-edit-modal"),profileEditForm:document.querySelector("#edit-profile-form"),profileTitleInput:document.querySelector("#profile-title-input"),profileDescriptionInput:document.querySelector("#profile-description-input"),cardAdd:i,cardAddForm:document.querySelector("#add-card-form"),cardTitleInput:i.querySelector(".modal__input_type_title"),cardImageInput:i.querySelector("#card-description-input"),cardURLInput:i.querySelector(".modal__input_type_url"),imageModal:s,imageModalImage:s.querySelector("#image-modal-image"),imageModalCaption:s.querySelector("#modal-caption"),avatarEditForm:n.querySelector(".modal__form"),avatarEditButton:document.querySelector(".profile__avatar-edit-button"),confirmDeleteModal:document.querySelector("#confirm-delete-modal")}}();const o=new u({nameSelector:"#profile-title",jobSelector:"#profile-description",avatarSelector:".profile__image"});c=new s(r,_.profileEditForm),c.enableValidation(),h=new s(r,_.cardAddForm),h.enableValidation(),m=new s(r,_.avatarEditForm),m.enableValidation();const v=new d({popupSelector:"#confirm-delete-modal"});v.setEventListeners(),p=new n({items:[],renderer:q},t);const f=new a("#add-card-modal",(t=>E.addCard({name:t.title,link:t.url}).then((t=>{q(t),f.close(),h.disableSubmitButton()})).catch((t=>{console.error("Error adding card:",t)}))));f.setEventListeners();const b=new a("#profile-edit-modal",(t=>E.updateUserInfo({name:t.name,about:t.about}).then((t=>{o.setUserInfo(t)})).catch((t=>{console.error("Error updating profile:",t)}))));b.setEventListeners();const g=new a("#avatar-edit-modal",(t=>E.updateAvatar(t.avatar).then((t=>{o.setAvatar(t.avatar)})).catch((t=>{console.error("Error updating avatar:",t)}))));g.setEventListeners();const y=new l("#popup-preview-modal");function q(t){const r=new i(t,e,C,((t,e)=>{v.setSubmitAction((()=>{v.renderSaving(!0),E.deleteCard(e).then((()=>{t.removeCard(),v.close()})).catch((t=>console.error("Error deleting card:",t))).finally((()=>{v.renderSaving(!1)}))})),v.open()}));p.addItem(r.getView())}function C(t){y.open(t)}y.setEventListeners(),E.getAppData().then((t=>{let[e,r]=t;S=e._id,o.setUserInfo(e),p.renderItems(r)})).catch((t=>console.error("Initialization error:",t))),_.profileEditButton.addEventListener("click",(()=>{c.resetValidation(),b.setInputValues(o.getUserInfo()),b.open()})),_.cardAddButton.addEventListener("click",(()=>{h.resetValidation(),f.open()})),_.avatarEditButton.addEventListener("click",(()=>{m.resetValidation(),g.open()}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,